{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 SUBHARTHI SAHA\
USC ID : 2944358040\
DATABASES HW 1\
\
Relationships between entities:\
\
1.STUDENT and REGISTRATION:\
\
The relationship is \'93has to register\'94 and connectivity of 1:M.\
\
Comments: Only one unique registration corresponds to a student registering for the summer courses or projects. Therefore, students are allowed to register for multiple courses, but the unique registration id will connected to a specific student.\
\
2.STUDENT and COURSE_SCHEDULE:\
\
The relationship is \'93needs to follow\'94  and connectivity of 1:M\
\
Comments: Every student can have more than one schedules, but not the other way around so it has a 1:M connection.\
\
3.STUDENT and COURSE_RATING:\
\
The relationship is \'93rates\'94  connectivity of 1:M\
\
Comments: Every student needs to rate the courses that they take and as they can take multiple courses the relationship is 1:M.\
\
4.STUDENT and PROJECT_GROUP:\
\
The relationship is \'93belong to\'94 connectivity of M:N\
\
Comments: Students can belong to multiple project groups and the project groups can have more than one student but to a limit of 4. \
\
5.STUDENT and PROJECT_RATING:\
\
The relationship is \'93rates\'94 connectivity of 1:M\
\
Comments: Every student needs to rate the project that they take and as they can take multiple projects the relationship is 1:M.\
\
6.STUDENT and INSTRUCTOR_RATING:\
\
The relationship is \'93rates\'94 connectivity of 1:M\
\
Comments: Every student needs to rate the instructor under whom they are taking a course or are supervised by and as they can take multiple instructors the relationship is 1:M.\
\
7.STUDENT and BOOKS:\
\
The relationship \'93checks out\'94 connectivity of 1:M\
\
Comments: When the book is available the student will be available to check out the book from the library and it can only be checked out once during a time interval which is of 2 weeks. The student can check out a maximum of 4 books. Thus the relation 1:M\
\
8.STUDENT and TUITION_FEES:\
\
The relationship is \'93pays\'94   connectivity of 1:1\
\
Comments: Every student registering for a course or project in the summer needs to pay a flat rate, thus the relation 1:1.\
\
9.INSTRUCTOR and SALARY:\
\
The relationship is \'93gets\'94 connectivity of 1:1\
\
Comments: Every instructor gets paid by the number of hours they work and all the instructor get the same rate for every hour. Thus an instructor has a unique salary slip for the work they have done.\
\
10. INSTRUCTOR and INSTRUCTOR_RATING:\
\
The relationship is \'93can have\'94 connectivity 1:M\
\
Comments: Every instructor can have ratings from multiple students.\
\
11.REGISTRATION and CODING_COURSE:\
\
The relationship is \'93for\'94 connectivity of 1:M\
\
Comments: A registration id can be used for 1 course id only once but the coding course can have multiple students.\
\
12.REGISTRATION and PROJECT:\
\
The relationship is \'93for\'94 connectivity of 1:M\
\
Comments: A registration id can be used for 1 project id only once but the coding course can have multiple students.\
\
13.PROJECT and PROJECT_GROUP: \
\
The relationship is \'93completed by\'94  connectivity of M:N\
\
Comments: Multiple groups can work on the same project topic and the vice versa I.e, a single project group can work on multiple topics.\
\
14.PROJECT and PROJECT_SCHEDULE:\
\
The relationship is \'93has\'94 connectivity of M:N\
\
Comments: Every project can have different schedules for different groups. And the schedules can also have multiple projects at the same time.\
\
15.PROJECT and PROJECT_RATING:\
\
The relationship is \'93can have\'94 connectivity of 1:M\
\
Comments: Every project can have multiple ratings from multiple students.\
\
16.CODING_COURSE and COURSE_RATING:\
\
The relationship is \'93can have\'94 connectivity of 1:M\
\
Comments: Every course can have multiple ratings from multiple students.\
\
17. CODING_COURSE and COURSE_SCHEDULE:\
\
The relationship is \'93has\'94 connectivity of M:N\
\
Comments: Every course can have different schedules for different professors. And the schedules can also have multiple professors teaching at the same time but at different locations.\
\
18.INSTRUCTOR and CODING_COURSE:\
\
The relationship is \'93instructs\'94 connectivity of M:N\
\
Comments: Multiple professors can instruct a course and a single professor can teach many courses.\
\
19.INSTRUCTOR and PROJECT:\
\
The relationship is \'93oversees\'94 connectivity of M:N\
\
Comments: Multiple professors can oversee a project and a single professor can oversee many projects.\
\
20.TEXTBOOK and CODING_COURSE:\
\
The relationship is \'93taught in\'94 connectivity of M:N\
\
Comments: 1 course taught by multiple professors can have many books and 1 book can be taught in multiple courses.\
\
21.PROJECT_GROUP and SQUARE_TABLE:\
\
The relationship is \'93assigned\'94 connectivity of 1:1\
\
Comments: Every group is assigned 1 table.\
\
22.PROJECT_GROUP and PROJECT_SCHEDULE:\
\
The relationship is \'93need to follow\'94 connectivity of 1:M\
\
Comments: A schedule can have only one project group but a project group can have multiple schedules.\
\
23.SQUARE_TABLE and COMPONENT:\
\
The relationship is \'93contains\'94 connectivity of 1:M\
\
Comments: A table can have multiple components.\
\
24.COMPONENTS and ORDER:\
\
The relationship is \'93included in\'94  connectivity of M:N\
\
Comments: A single components can belong to multiple orders and a single order can have multiple components.\
\
25.SUPPLIER and ORDER:\
\
The relationship is \'93supplies\'94 connectivity of 1:M\
\
Comments: A single supplier is requested with a specific order id which contains multiple orders.\
\
\
}